import pyhepmc
import argparse

from ROOT import TFile, TTree, std
from numpy import cosh
from array import array

parser = argparse.ArgumentParser(description = '', add_help = False)
parser = argparse.ArgumentParser()



parser.add_argument('-i','--inputFile', action='store', dest='inputFile', required = False,
                    help = "The hepmc input file.")

parser.add_argument('-o','--outputFile', action='store', dest='outputFile', required = False,
                    help = "The event output file generated by the Pythia event generator.")

args = parser.parse_args()

with pyhepmc.open(args.inputFile) as f:
    event = f.read()

f = TFile(args.outputFile,'RECREATE')
tree = TTree("particles","Particles")
eventNumber = array('i',[0])
avg_mu = array('f',[0])
isMain = std.vector('int')()
pdg_id = std.vector('int')()
bc_id = std.vector('int')()
e = std.vector('float')()
et = std.vector('float')()
eta = std.vector('float')()
phi = std.vector('float')()
px = std.vector('float')()
py = std.vector('float')()
pz = std.vector('float')()
prod_x = std.vector('float')()
prod_y = std.vector('float')()
prod_z = std.vector('float')()
prod_t = std.vector('float')()


tree.Branch('EventNumber',eventNumber,'eventNumber/I')
tree.Branch('avg_mu',avg_mu,'avg_mu/F')
tree.Branch('p_isMain',isMain)
tree.Branch('p_pdg_id',pdg_id)
tree.Branch('p_bc_id',bc_id)
tree.Branch('p_e',e)
tree.Branch('p_et',et)
tree.Branch('p_eta',eta)
tree.Branch('p_phi',phi)
tree.Branch('p_px', px)
tree.Branch('p_py', py)
tree.Branch('p_pz', pz)
tree.Branch('p_prod_x',prod_x)
tree.Branch('p_prod_y',prod_y)
tree.Branch('p_prod_z',prod_z)
tree.Branch('p_prod_t',prod_t)


for particle in event.particles:
    if particle.status != 1: continue
    pdg_id.push_back(particle.pid)
    isMain.push_back(1)
    bc_id.push_back(0)
    e.push_back(particle.momentum.e)
    eta.push_back(particle.momentum.eta())
    phi.push_back(particle.momentum.phi())
    et.push_back(particle.momentum.e/cosh(particle.momentum.eta()))
    px.push_back(particle.momentum.px)
    py.push_back(particle.momentum.py)
    pz.push_back(particle.momentum.pz)
    prod_x.push_back(0)
    prod_y.push_back(0)
    prod_z.push_back(0)
    prod_t.push_back(0)
    tree.Fill()
    pdg_id.clear()
    isMain.clear()
    bc_id.clear()
    e.clear()
    eta.clear()
    phi.clear()
    et.clear()
    px.clear()
    py.clear()
    pz.clear()
    prod_x.clear()
    prod_y.clear()
    prod_z.clear()
    prod_t.clear()
    eventNumber[0] = int(eventNumber[0] + 1)
    avg_mu[0] = 0

f.Write()
f.Close()